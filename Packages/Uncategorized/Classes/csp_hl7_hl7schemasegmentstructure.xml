<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2014.1.3 (Build 775U)" ts="2019-07-17 13:16:22">
<Class name="csp.hl7.hl7schemasegmentstructure">
<ClassType/>
<Hidden>1</Hidden>
<Import>User</Import>
<Language>cache</Language>
<ProcedureBlock>0</ProcedureBlock>
<Super>CSPX.AutoPageCSP</Super>
<TimeChanged>61501,53312.682465</TimeChanged>
<TimeCreated>61501,53312.676649</TimeCreated>
<GeneratedBy>/csp/goldb/HL7/HL7SchemaSegmentStructure.csp</GeneratedBy>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do ..OnPageCSPROOT()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPageBODY">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<body>"
	Write !,"<table border=""0"" class=""LayoutMain"" width=""100%"" cellpadding=""0"" cellspacing=""0"">"
	Do ..WriteTitlePane("@Ensemble:HL7ManagerSegmentStructure@Ensemble HL7 Segment Structure")
	Write !,"</table>"
	Write !,!,"<div class=""Text1"">"
	Write "HL7 <b>Segment Structure</b> definition is displayed below:"
	Write "</div>"
	Write !,!
	#Include EnsHL7
	set ss=%request.Get("SS")
	set category=$p(ss,":",2)
	set secondary=$p(ss,":",3)
	If ((category'="")&&(secondary'="")) {
	set description=..EscapeHTML($G($$$vaSchemaDescGbl(category,"SS",secondary)))
	if '$data($$$vaSchemaGbl(category,"SS",secondary)) {
	write "<b><font size=6>"_ss_" </font> Definition does not exist!</b>",!
	quit
	}
	}
	set ms=%request.Get("MS")
	set tPath=%request.Get("PATH")
	Write !
	If '($L(tPath)) Goto %csp00001 ;{
	Write !,"<div class=""Text1"">"
	Write "<i>Path you followed to get to this segment:</i>&nbsp;<b>"_(tPath)_"</b><br>",!
	Write "	<i>In Message Structure </i>&nbsp;<b>'"_($P(ms,":",2,3))_"'</b>"
	Write "</div>"
	Write !
%csp00001	;}
	Write !,"<div style=""margin-left: 20px; margin-right: 20px;"">"
	Write !,!,"<table border=1 cellpadding=4 cellspacing=0  style=""font-size: 0.8em; margin-left: 20px;"">",!
	Write !,"<tr><td colspan=11><b><font size=6>"_(category_":"_secondary)_" </font> "_($G(description))_"</b></td></tr>",!
	Write !,"<tr><td colspan=11 align=center><b></b></font></td></tr>",!
	Write !,"<tr align='left'><th>Field</th><th>Description</th><th>Property&nbsp;Name</th><th>Data&nbsp;Structure</th><th>Symbol</th><th>Repeat&nbsp;Count</th><th>Length</th><th>Required</th><th>Repeating</th><th>Code&nbsp;Table</th><th><center><i>Alternate<br>Description</i></center></th></tr>",!
	Write !
	If ((category'="")&&(secondary'="")) {
	set struct=$$$vaSchemaGbl(category,"SS",secondary)
	kill names set name="" for { set name=$o($$$vaSchemaGbl(category,"SS",secondary,"names",name)) quit:name=""
	set names($$$vaSchemaGbl(category,"SS",secondary,"names",name))=name
	}
	For i=1:1:$LL(struct)  { Set one=$LG(struct,i)
	write "<tr>"
	write "<td>"_i_"</td>"
	; description
	set description=..EscapeHTML($G($$$vaSchemaDescGbl(category,"SS",secondary,i)))
	write "<td>",$s(description="":"&nbsp;",1:description),"</td>"
	; property name
	set tPropPath=$S(""=$G(names(i)):"",1:tPath_":"_$G(names(i)))_$S($LG(one,6):"()",1:"")
	write "<td><a"_$S(""=tPath:"",1:" title='"_tPropPath_"' href='"_..Link("HL7SchemaPath.csp?PATH="_tPropPath_"&FIELD="_i_"&MS="_ms_"&SS="_ss)_"'")_">"_$G(names(i),"&nbsp")_"</a></td>"
	; data structure
	set value=$LG(one,1) write "<td>",$S(value="":"&nbsp;",1:"<a href='"_..Link("HL7SchemaDataStructure.csp?DS=DS:"_value_"&PATH="_tPropPath_"&FIELD="_i_"&MS="_ms_"&SS="_ss)_"'>"_value_"</a>"),"</td>"
	; symbol
	set value=$LG(one,2),annotate=$Case(value,"*":"zero or more", "+":"one or more", "!":"exactly one&nbsp;required", "?":"conditional", "&":"conditional", :"")
	write "<td>",$S(value="":"&nbsp;",1:value_$s(annotate="":"",1:" ("_annotate_")")),"</td>"
	; repeat count
	set value=$LG(one,3) write "<td>",$S(value="":"&nbsp;",1:value),"</td>"
	; length
	set value=$LG(one,4) write "<td>",$S(value="":"&nbsp;",1:value),"</td>"
	; required
	set value=$LG(one,5) write "<td>",$S(value="":"&nbsp;",1:value),"</td>"
	; if repeating
	set value=$LG(one,6) write "<td>",$S(value="":"&nbsp;",1:value),"</td>"
	; code table
	set value=$G($$$vaSchemaGbl(category,"SS",secondary,"tables",i))
	write "<td>",$S(value="":"&nbsp;",1:"<a href='"_..Link("HL7SchemaCodeTable.csp?CT=CT:"_value)_"'>"_value_"</a>"),"</td>"
	; alternate description
	set altdesc=..EscapeHTML($G($$$vaSchemaDescGbl(category,"SS",secondary,i,"alt")))
	write "<td>",$S(altdesc="":"&nbsp;",1:altdesc),"</td>"
	}
	}
	Write !,"</table>",!
	Write !,"<p>",!
	Write "<a href="""_(..Link("HL7SchemaMain.csp"))_""">"
	Write "(Show All Categories)"
	Write "</a>"
	Write "<br>",!
	Write "<a href="""_(..Link("HL7SchemaList.csp?ELEMENT=SS&CATEGORY="_category))_""">"
	Write "(Show All Segment Structures in Category '"_(category)_"')"
	Write "</a>"
	Write !,"</div>"
	Write !,"</body>"
]]></Implementation>
</Method>

<Method name="OnPageCSPROOT">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write !
	Do ..OnPageHTML()
]]></Implementation>
</Method>

<Method name="OnPageHEAD">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<head>"
	Write !,"<title>Ensemble HL7 Segment Structure</title>",!
	Write "<link rel=""stylesheet"" type=""text/css"" href=""/csp/sys/csputils.css"" title=""Standard Style""/>"
	Write !,"</head>"
]]></Implementation>
</Method>

<Method name="OnPageHTML">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<html>"
	Write !
	Do ..OnPageHEAD()
	Write !
	Do ..OnPageBODY()
	Write !,"</html>"
]]></Implementation>
</Method>

<Parameter name="CSPFILE">
<Default>C:\InterSystems\Ensemble\CSP\goldb\HL7\HL7SchemaSegmentStructure.csp</Default>
</Parameter>

<Parameter name="CSPURL">
<Default>/csp/goldb/HL7/HL7SchemaSegmentStructure.csp</Default>
</Parameter>

<Parameter name="DOMAIN">
<Default>Ensemble</Default>
</Parameter>

<Parameter name="FileTimestamp">
<Default>61286,9120</Default>
</Parameter>

<Parameter name="PAGENAME">
<Default>HL7 Segment Structure</Default>
</Parameter>

<Parameter name="PARENTPAGE">
<Default>HL7SchemaMain.csp</Default>
</Parameter>
</Class>
</Export>
