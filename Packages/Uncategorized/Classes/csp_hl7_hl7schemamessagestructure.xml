<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2014.1.3 (Build 775)" ts="2018-09-28 14:46:47">
<Class name="csp.hl7.hl7schemamessagestructure">
<ClassType/>
<Hidden>1</Hidden>
<Import>User</Import>
<Language>cache</Language>
<ProcedureBlock>0</ProcedureBlock>
<Super>CSPX.AutoPageCSP</Super>
<TimeChanged>61501,53312.531119</TimeChanged>
<TimeCreated>61501,53312.525264</TimeCreated>
<GeneratedBy>/csp/goldb/HL7/HL7SchemaMessageStructure.csp</GeneratedBy>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do ..OnPageCSPROOT()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPageBODY">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<body>"
	Write !,"<table border=""0"" class=""LayoutMain"" width=""100%"" cellpadding=""0"" cellspacing=""0"">"
	Do ..WriteTitlePane("@Ensemble:HL7ManagerMessageStructure@Ensemble HL7 Message Structure")
	Write !,"</table>"
	Write !,!,"<div class=""Text1"">"
	Write "HL7 <b>Message Structure</b> (<b>DocType</b>) definition is displayed below:"
	Write "</div>"
	Write !,!
	#Include EnsHL7
	set ms=%request.Get("MS")
	set category=$p(ms,":",2)
	set secondary=$p(ms,":",3)
	If ((category'="")&&(secondary'="")) {
	set description=..EscapeHTML(##class(EnsLib.HL7.Schema).GetDescription(ms))
	if $data($$$vaSchemaGbl(category,"MS",secondary))=0 {
	write "<b><font size=6>"_ms_" </font> Definition does not exist!</b>",!
	quit
	}
	}
	Write !,!,"<b><font size=6>"_(category_":"_secondary)_" </font> "_($G(description))_"</b>",!
	Write "<br><br>",!
	Write "<div style=""margin-left: 20px; margin-right: 20px;"">"
	Write !,!
	If ((category'="")&&(secondary'="")) {
	Set struct=$$$vaSchemaGbl(category,"MS",secondary)
	#; Build segment paths list
	Set rs=##class(%ResultSet).%New("Ens.VDoc.Utils:EnumerateDocContents")
	Set sc=rs.Execute("EnsLib.HL7.Message",,category_":"_secondary,1)
	If $$$ISOK(sc) {
	Set iSeg=0,depth=0,fullpath=""
	For iRow=1:1 { Quit:'rs.Next()
	Set path=rs.Data("Property"), type=rs.Data("Type")
	If $E(path,depth+1)="." { Set depth=depth+1 }
	Else {
	While depth&&($E(path,depth)'=".") { Set depth=depth-1 }
	}
	Set seg=$P($P(type,":",3),"(")
	Set fullpath=$S(depth:$P(fullpath,".",1,depth)_".",1:"")_$E(path,depth+1,$L(path))
	If seg'["grp"&&(seg'["union") {
	Set iSeg=iSeg+1, segs(iSeg)=fullpath, segs(iSeg,"type")=seg
	}
	}
	}
	#; Draw segments table
	write "<table border=1 cellpadding=2 cellspacing=0 style=""font-size: 1.0em;""><tbody align=center><tr>",!
	Set iSeg=0  For i=1:1:$L(struct,"~")  {
	Set tSegRef=$P(struct,"~",i)
	If tSegRef="[" Write "<td><table border=1 cellpadding=2 cellspacing=0 style=""border: 2 dotted green""><tr>",! Continue
	If tSegRef="]" Write "</tr></table></td>",! Continue
	If tSegRef="{" Write "<td><table cellpadding=2 cellspacing=0 style=""border: 2 solid red""><tr>",! Continue
	If tSegRef="}" Write "</tr></table></td>",! Continue
	If tSegRef="<" Write "<td><table border=1 bordercolor=orange cellpadding=2 cellspacing=0 style=""border: 1 dotted""><tr>",! Continue
	If tSegRef=">" Write "</tr></table></td>",! Continue
	If tSegRef="|" Continue
	Set iSeg=iSeg+1, tName=$P(tSegRef,":",2)
	If "DocsRef"=$E(tName,*-$L("DocsRef")+1,*) {
	Set tRef=$S("Message"'=$E(tName,1,*-$L("DocsRef")):
	"HL7SchemaMessageType.csp?MT=MT:"_$p(tSegRef,":")_":"_$E(tName,1,*-$L("DocsRef"))
	, 1:"HL7SchemaList.csp?ELEMENT=MT&CATEGORY="_$S("."=$P(tSegRef,":"):$G($$$vaSchemaGbl(category,"base"),category),1:$P(tSegRef,":")))
	Write "<td><a title='Zero or more """_$E(tName,1,*-$L("DocsRef"))_""" documents appear here' href='"_..Link(tRef)_"'>"_tName_"</a></td>"
	} Else {
	Set tPath=$S($G(segs(iSeg,"type"))=tName&&(tName'=""):segs(iSeg), 1:"")
	Set tDesc=..EscapeHTML(##class(EnsLib.HL7.Schema).GetDescription("SS:"_tSegRef))
	Write "<td><a title='"_$S(""'=tPath:tPath, 1:tSegRef)_$S(""=tDesc:"",1:" - "_tDesc)_"' href='"_..Link("HL7SchemaSegmentStructure.csp?SS=SS:"_tSegRef_"&PATH="_$S(""=tPath:"",1:tPath)_"&MS="_ms)_"'>"_tName_"</a></td>"
	}
	}
	Write "</table>"
	Write "<br>"
	Write "<table cellpadding=4 cellspacing=0>"
	Write "<tr><td><table border=1 cellpadding=0 cellspacing=0 style=""border: 2 dotted green"" #000000><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table></td>"
	Write "<td>optional</td></tr>"
	Write "<tr><td><table cellpadding=0 cellspacing=0 style=""border: 2 solid red""><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table></td>"
	Write "<td>repeating</td></tr>"
	If struct["|" {
	Write "<tr><td><table border=1 bordercolor=orange cellpadding=0 cellspacing=0 style=""border: 1 dotted"" #000000><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table></td>"
	Write "<td>choice</td></tr>"
	}
	Write "</table>"
	Write "<br>"
	}
	Write !,!,"<p>",!
	Write "<a href="""_(..Link("HL7SchemaMain.csp"))_""">"
	Write "(Show All Categories)"
	Write "</a>"
	Write "<br>",!
	Write "<a href="""_(..Link("HL7SchemaList.csp?ELEMENT=MS&CATEGORY="_category))_""">"
	Write "(Show All Message Structures in category '"_(category)_"')"
	Write "</a>"
	Write "<br>",!
	Write "<a href="""_(..Link("HL7SchemaRawStructure.csp?MS="_ms))_""">"
	Write "(Show Raw Definition text)"
	Write "</a>"
	Write !,"</div>"
	Write !,"</body>"
]]></Implementation>
</Method>

<Method name="OnPageCSPROOT">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write !
	Do ..OnPageHTML()
]]></Implementation>
</Method>

<Method name="OnPageHEAD">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<head>"
	Write !,"<title>Ensemble HL7 Message Structure</title>",!
	Write "<link rel=""stylesheet"" type=""text/css"" href=""/csp/sys/csputils.css"" title=""Standard Style""/>"
	Write !,"</head>"
]]></Implementation>
</Method>

<Method name="OnPageHTML">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<html>"
	Write !
	Do ..OnPageHEAD()
	Write !
	Do ..OnPageBODY()
	Write !,"</html>"
]]></Implementation>
</Method>

<Parameter name="CSPFILE">
<Default>C:\InterSystems\Ensemble\CSP\goldb\HL7\HL7SchemaMessageStructure.csp</Default>
</Parameter>

<Parameter name="CSPURL">
<Default>/csp/goldb/HL7/HL7SchemaMessageStructure.csp</Default>
</Parameter>

<Parameter name="DOMAIN">
<Default>Ensemble</Default>
</Parameter>

<Parameter name="FileTimestamp">
<Default>61286,9120</Default>
</Parameter>

<Parameter name="PAGENAME">
<Default>HL7 Message Structure</Default>
</Parameter>

<Parameter name="PARENTPAGE">
<Default>HL7SchemaMain.csp</Default>
</Parameter>
</Class>
</Export>
