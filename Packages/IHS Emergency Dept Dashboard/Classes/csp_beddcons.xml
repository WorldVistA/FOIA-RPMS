<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2014.1.3 (Build 775)" ts="2018-09-28 14:46:46">
<Class name="csp.beddcons">
<ClassType/>
<Hidden>1</Hidden>
<Import>User</Import>
<Language>cache</Language>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeChanged>64672,29653.012413</TimeChanged>
<TimeCreated>64672,29652.961529</TimeCreated>
<GeneratedBy>/csp/foia_goldb/BEDDCONS.csp</GeneratedBy>

<Method name="MyXdate">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>rawDtTm:%String</FormalSpec>
<Language>cache</Language>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	Set val=$$XDATE^BEDDUTID(rawDtTm)
 	Quit val
 
]]></Implementation>
</Method>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do ..OnPagePREHTML()
	Do ..OnPageCSPROOT()
	Do ..OnPagePOSTHTML()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPageBODY">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<BODY bgcolor=""#CCCCFF"" onload=""setFocus()"">"
	Write !,!,"<!-- use CSP:OBJECT tag to create a reference to an instance of the class -->"
	Write !
	If ((%request.Get("OBJID"))'="") {
	Set objForm = ##class(BEDD.EDConsults).%OpenId((%request.Get("OBJID")))
	} Else {
	Set objForm = ##class(BEDD.EDConsults).%New()
	}
	Write !
	If ((%request.Get("EDVISITID"))'="") {
	Set vstForm = ##class(BEDD.EDVISIT).%OpenId((%request.Get("EDVISITID")))
	} Else {
	Set vstForm = ##class(BEDD.EDVISIT).%New()
	}
	Write !,!,"<form name=""form"" onsubmit='return form_validate();' method=""get"">"
	Write !,..InsertHiddenFields(""),!
	Write !,!
	Set consrv=objForm.ConsultSrv
	Set constf=objForm.Consult
	Set U="^"
	Set objid=%request.Get("OBJID")
	Set (dfn,ptdfn)=vstForm.PtDFN
	Set %session.Data("DFN")=dfn
	Set vien=vstForm.VIEN
	//Audit the activity
	Do LOG^BEDDUTIU(%session.Data("DUZ"),"P","Q","BEDDCONS.csp","BEDD: User displayed patient consult information",dfn)
	//
	//Name and Gender
	Set ptname=vstForm.PtName
	Set ptsex=vstForm.Sex
	//
	//DOB, Age and Chart
	Set ptdob=vstForm.DOB
	Set ptage=vstForm.Age
	Set ptchart=vstForm.Chart
	//
	//Admission Information
	Set ptcidt=vstForm.PtCIDT
	Write !,!,"<center>",!
	Write !,"<center><b><font size=6>ED Consult Worksheet</font></b></center>",!
	Write "<br>",!
	Write !,"<label for=""PtName"">Patient (Gender)</label> "
	Write "<input name=""%noname"" type=""text"" id=""PtName"" value='"_(ptname)_" ("_(ptsex)_")' size=""40"" readonly style=""color: #000000; font-family: Tahoma; font-weight: bold; font-size: 14px; background-color: #C0C0C0;""/>"
	Write !,"&nbsp;",!
	Write "<label for=""PtDOB"">DOB (Age)</label> "
	Write "<input name=""%noname"" type=""text"" id=""PtDOB"" value='"_(ptdob)_" ("_(ptage)_")' size=""25"" readonly style=""color: #000000; font-family: Tahoma; font-weight: bold; font-size: 14px; background-color: #C0C0C0;""/>"
	Write !,"&nbsp;",!
	Write "<label for=""PtChart"">Chart</label> "
	Write "<input name=""%noname"" type=""text"" id=""PtChart"" value='"_(ptchart)_"' size=""8"" readonly style=""color: #000000; font-family: Tahoma; font-weight: bold; font-size: 14px; background-color: #C0C0C0;""/>"
	Write !,"&nbsp; &nbsp;",!
	Write "<input type=""button"" name=""btnClose"" style=""width:100px;height:25px"" value=""Close"" onclick='close_page();'>"
	Write !,!,"<hr>",!
	Write "<br>",!
	Write !,"<table border=1 bgcolor="""" width=""80%"">",!
	Write "		<tr><td><b>Consult Service</b></td>",!
	Write "			<td><b>Consultant</b></td>",!
	Write "			<td><b>Date and Time Notified</b></td>",!
	Write "			<td><b>Date and Time Seen</b></td>",!
	Write "		</tr>",!
	Write "				",!
	// Open instance of ResultSet for runtime mode of DISPLAY.
	Set VuCons = ##class(%ResultSet).%New()
	Set VuCons.RuntimeMode=2
	Set sqlStatement=$zstrip($tr($c(13,10,9)_"SELECT ID,ConsultSrvN,Consult,ConsultN,DateNotify,TimeNotify,ConsultSrv,CNotes,DateSeen,TimeSeen FROM BEDD.EDConsults"_$c(13,10,9)_"Where (EDVISITID = :edvisitid) "_$c(13,10,9),$C(9,13,10),"   "),"<>W")
	If $zcvt($extract(sqlStatement,1,6),"U")'="SELECT" {
	Do ..ShowError($$$ERROR($$$CSPSQLOnlySelect,"266"))
	Quit
	}
	// translate tab/cr/nl to spaces
	Set %sc = VuCons.Prepare(sqlStatement,0,"RUNTIME")
	If (+%sc=0) {
	Do ..ShowError(%sc)
	Quit
	}
	Set %sc = VuCons.Execute()
	If (+%sc=0) {
	Do ..ShowError(%sc)
	Quit
	}
	Write !,"		"
%csp00002	If '(VuCons.Next()) Goto %csp00001 ;{
	Write !,"	  		<tr>",!
	Write "	  		<td>"
	Write "<a href="""_($zconvert(..Link("javascript:editItem("_(..QuoteJS(VuCons.Get("ID")))_");"),"O","HTML"))_""">"
	Write (VuCons.Get("ConsultSrvN"))
	Write "</a>"
	Write "</td>",!
	Write "	  		<td>"_($$GETF^BEDDUTIL(200,VuCons.Get("ConsultN"),".01","I"))_"</td>",!
	Write "	  		<td>"_(VuCons.Get("DateNotify")),!
	Write "	  		"
	If '(VuCons.Get("TimeNotify")]"") Goto %csp00003 ;{
	Write !,"	  			at "_(VuCons.Get("TimeNotify")),!
	Write "	  		"
%csp00003	;}
	Write !,"	  		</td>",!
	Write "	  		<td>"_(VuCons.Get("DateSeen"))_" at "_(VuCons.Get("TimeSeen"))_"  </td>",!
	Write "	  		</tr>",!
	Write "		"
	Goto %csp00002
%csp00001	;}
	Write !,"</table>",!
	Write !
	Set consrv=objForm.ConsultSrv
	Set constf=objForm.Consult
	Write !,!
	Set %value = $$$HTMLENCODE($get(%request.Data("text3",1),$ZSTRIP($select(objForm="":"",1:(objForm.%Id())),">W")))
	Write "<input value="""_(%value)_""" type=""hidden"" name=""text3"" id=""text3"">"
	Write !,"<input type=""hidden"" name=""PTDFN"" id=""PTDFN"" value="_(dfn),">"
	Write !
	Set %value = $$$HTMLENCODE($get(%request.Data("DFN",1),$ZSTRIP($select(objForm="":"",1:(objForm.DFNLogicalToDisplay(objForm.DFN))),">W")))
	Write "<input value="""_(%value)_""" type=""hidden"" name=""DFN"" id=""DFN"" size=""10"">"
	Write !
	Set %value = $$$HTMLENCODE($get(%request.Data("EDVISITID",1),$ZSTRIP($select(objForm="":"",1:(objForm.EDVISITIDLogicalToDisplay(objForm.EDVISITID))),">W")))
	Write "<input type=""hidden"" name=""EDVISITID"" id=""EDVISITID"" size=""10"" value='"_(%value)_"'>"
	Write !,"<input name=""%noname"" type=""hidden"" id=""AStmp"" value='"_(ptcidt)_"' readonly/>"
	Write " ",!
	Write !,"<br><br>",!
	Write !,"<table border=""1"" width=""70%"">",!
	Write "	<tr>",!
	Write "	<td>",!
	Write "		"
	Write "<input type=""hidden"" name=""consrv"" id=""consrv"" size=""5"" value="""_(consrv)_""">"
	Write !,"		"
	Write "<input type=""hidden"" name=""ConsID"" id=""ConsID"" size=""5"" value="""">"
	Write !,"		<b>*Consultant Service:</b>",!
	Write "	</td>",!
	Write "	<td> ",!
	Write "		"
	Write "<select id=""conss"" name=""conss"">"
	Write !,"			"
	Do CONS^BEDDUTIU(.cons)
	&html<<option> </option>>
	Set cons=$O(cons(""))
	While (+cons'=0) {
	&html<<option value="#($P(cons(cons),"^"))#"> #($P(cons(cons),"^",2))#  </option>>
	Set cons=$O(cons(cons))
	}
	Write !,"		"
	Write "</select>"
	Write !,"	</td>",!
	Write "	</tr>",!
	Write "	<tr>",!
	Write "	<td>",!
	Write "		"
	Write "<input name=""%noname"" type=""hidden"" id=""constf"" size=""5"" value="_(constf),">"
	Write !,"		<b>*Consultant:</b>",!
	Write "	</td>",!
	Write "	<td>",!
	Write "		"
	Write "<select id=""consult"" name=""consult"">"
	Write !,"		"
	Do PROV^BEDDUTID(.prov)
	&html<<option> </option>>
	Set prov=$O(prov(""))
	While (+prov'=0) {
	&html<<option value="#($P(prov(prov),"^"))#"> #($P(prov(prov),"^",2))#  </option>>
	Set prov=$O(prov(prov))
	}
	Write !,"		"
	Write "</select>"
	Write !,"	</td>",!
	Write "	</tr>",!
	Write "	<tr>",!
	Write "	<td>",!
	Write "		<b>Date & Time notified:</b>",!
	Write "	</td>",!
	Write "	<td>",!
	Write "		"
	Write "<input type=""text"" name=""DtTmNot"" id=""DtTmNot"" size=""18"" onblur='doDateCheck(""DtTmNot"");'>"
	Write !,"	</td>",!
	Write "	</tr>",!
	Write "	<tr>",!
	Write "	<td>",!
	Write "		<b>*Date & Time seen:</b>",!
	Write "	</td>",!
	Write "	<td>",!
	Write "		"
	Write "<input type=""text"" name=""DtTmSee"" id=""DtTmSee"" size=""18"" onblur='doDateCheck(""DtTmSee"");'/>"
	Write !,"	</td>",!
	Write "	</tr>",!
	Write "</table>",!
	Write !,"<br><br>",!
	Write "<i>*Enter the letter ""N"" in the date fields to auto-populate the current date and time</i>",!
	Write "<br>",!
	Write !,"<br><br>General Information/Notes: ",!
	Write "	<br>"
	Write "<textarea name=""CNotes"" id=""ConNote"" cols=""85"" rows=""3"">"
	Write $select($data(%request.Data("CNotes",1)):$$$HTMLENCODE(%request.Data("CNotes",1)),1:$$$HTMLENCODE($select(objForm="":"",1:(##class(%CSP.DwxUtils).EscapeStream(objForm.CNotes,"HTML")))))
	Write "</textarea>"
	Write !,!,"<br><br>"
	Write "<input type=""button"" name=""btnSave"" style=""width:100px;height:25px"" value=""Save"" onclick='saveItem();'>"
	Write !,"&nbsp; "
	Write "<input type=""button"" name=""btnDel"" style=""width:100px;height:25px"" value=""Delete"" onclick='deleteItem();'>"
	Write !,"&nbsp; "
	Write "<input type=""button"" name=""btnClose"" style=""width:100px;height:25px"" value=""Close"" onclick='close_page();'>"
	Write !,!,"</center>",!
	Write !,"<input id=""OBJID"" name=""OBJID"" type=""hidden"" value="""_($select(objForm="":"",1:objForm.%Id()))_""">"
	Write "</form>"
	Write !,!,!,!,!,!,!,!,!,!,!,!,!,!,"</BODY>"
]]></Implementation>
</Method>

<Method name="OnPageCSPROOT">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<!-- BEDDCONS.csp - BEDD ED Consult Worksheet Page -->"
	Write !,"<!-- ;;2.0;IHS EMERGENCY DEPT DASHBOARD;;Apr 02, 2014 -->"
	Write !
	Do ..OnPageHTML()
]]></Implementation>
</Method>

<Method name="OnPageHEAD">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<HEAD>"
	Write !
	Set U="^",site=%session.Data("SITE")
	Do LOADSYS^BEDDUTW(.beddsys,site)
	Set timeout=$G(beddsys("TimeOut"))
	Write !,!,"<META HTTP-EQUIV=""Refresh"" CONTENT="""_( timeout )_"; URL=BEDD.csp"">"
	Write !,!,"<TITLE>	ED Consults </TITLE>",!
	Write "	"
	//Set edvisitid=%request.Get("EDVISITID")
	//Set %session.Data("EDVISITID")=edvisitid
	//Set dfn=%request.Get("DFN")
	//Set %session.Data("DFN")=dfn
	Set edvisitid=%session.Data("EDVISITID")
	Set dfn=%session.Data("DFN")
	Set (consrv,constf)=""
	Set (consdt,constm)=""
	Write !,"  ",!
	Write "<SCRIPT language=""JavaScript"">"
	Write !,"	",!
	Write "	function saveItem() {",!
	Write "		",!
	Write "		submitOK=""true"";",!
	Write "		",!
	Write "		//Make sure user is logged in",!
	Write !,"		//Get user",!
	Write "		var user = "_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".ReturnDUZ"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"') ;",!
	Write "	",!
	Write "		if (user == 0) {",!
	Write "			alert(""User has been logged out"");",!
	Write "			location.replace='BEDDLogin.csp';",!
	Write "			return true;",!
	Write "		}",!
	Write !,"		<!--Consult Type-->",!
	Write "		var iact = document.getElementById('conss');",!
	Write "		if (iact.value=="""") {",!
	Write "		alert(""Consultant Service is Required"");",!
	Write "		submitOK=""false"";",!
	Write "		}",!
	Write "	",!
	Write "		<!--Consultant-->",!
	Write "		var iact = document.getElementById('consult');",!
	Write "		if (iact.value=="""") {",!
	Write "		alert(""Consultant is Required"");",!
	Write "		submitOK=""false"";",!
	Write "		}",!
	Write "		",!
	Write "		<!--Consultant Notified Date and Time Check-->",!
	Write "		<!--Make time required if date entered-->",!
	Write "		var csdt = document.getElementById('DtTmNot');",!
	Write "		if (csdt.value.length>0) {",!
	Write "			if (csdt.value.length<11) {",!
	Write "				alert(""If entering Consultant Notified - Both Date and Time Must Be Entered"");",!
	Write "				submitOK=""false"";",!
	Write "			}",!
	Write "			if (csdt.value.length>10) {",!
	Write "				var admdt = document.getElementById('AStmp');",!
	Write "				var mess = "_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".getDtChk"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"',csdt.value,admdt.value,""F"") ;",!
	Write "				if (mess==""F"") {",!
	Write "					alert(""Future Consultant Notified Date/Time is not allowed"");",!
	Write "					submitOK=""false"";",!
	Write "				}",!
	Write "				if (mess==""A"") {",!
	Write "					alert(""Consultant Notified Date/Time must be after Admit Date/Time"");",!
	Write "					submitOK=""false"";",!
	Write "				}",!
	Write "			}",!
	Write "		}",!
	Write "		",!
	Write "		<!--Consultant Seen Date and Time Check-->",!
	Write "		var csdt = document.getElementById('DtTmSee');",!
	Write "		if (csdt.value=="""") {",!
	Write "			alert(""Consultant Seen Date/Time is Required"");",!
	Write "			submitOK=""false"";",!
	Write "		}",!
	Write "		if (csdt.value.length>0) {",!
	Write "			if (csdt.value.length<11) {",!
	Write "				alert(""Both Consultant Seen Date and Time are Required"");",!
	Write "				submitOK=""false"";",!
	Write "			}",!
	Write "			if (csdt.value.length>10) {",!
	Write "				var admdt = document.getElementById('AStmp');",!
	Write "				var mess = "_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".getDtChk"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"',csdt.value,admdt.value,""AF"") ;",!
	Write "				if (mess==""F"") {",!
	Write "					alert(""Future Consultant Seen Date/Time is not allowed"");",!
	Write "					submitOK=""false"";",!
	Write "				}",!
	Write "				if (mess==""A"") {",!
	Write "					alert(""Consultant Seen Date/Time must be after Admit Date/Time"");",!
	Write "					submitOK=""false"";",!
	Write "				}",!
	Write "			}",!
	Write "		}",!
	Write "		",!
	Write "		if (submitOK==""true"") {",!
	Write "		",!
	Write "			var x0 = document.getElementById(""PTDFN"");",!
	Write "			var x1 = document.getElementById(""conss"");",!
	Write "			var x2 = document.getElementById(""consult"");",!
	Write "			var x3 = document.getElementById(""DtTmNot"");",!
	Write "			var x4 = document.getElementById(""DtTmSee"");",!
	Write "			var x5 = document.getElementById(""ConNote"");",!
	Write "			var myConID=document.form.ConsID.value;",!
	Write "			var myVisId=document.form.EDVISITID.value;",!
	Write "		",!
	Write "			// Need to get the Consultant and service from the select lists",!
	Write "			var ConsIdx = x1.selectedIndex;",!
	Write "    		var ConService = x1.options[ConsIdx].value;",!
	Write "    		var ProvIdx = x2.selectedIndex;",!
	Write "    		var ConProv = x2.options[ProvIdx].value;",!
	Write "    	",!
	Write "    		if((ConService != """")&&(ConProv != """")) {",!
	Write "				"_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".updateCons"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"',myConID,ConService,ConProv,x3.value,x4.value,myVisId,x0.value,x5.value) ;",!
	Write "    		} else {",!
	Write "	    		alert(""Save not performed because Service or Consultant is missing"");",!
	Write "    		}",!
	Write "			location.reload(true);",!
	Write "		}",!
	Write "		",!
	Write "	}",!
	Write "	",!
	Write "	function editItem(mydata1) {",!
	Write "		",!
	Write "		// Save this id so we can call the record directly",!
	Write "		document.form.ConsID.value = mydata1;",!
	Write "		",!
	Write "		// Populate the fields so that they can be edited",!
	Write "		"_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".editCons"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"',mydata1) ;",!
	Write "	}",!
	Write "	",!
	Write "	function deleteItem() {",!
	Write "		var mydata1 = document.form.ConsID.value ;",!
	Write "		",!
	Write "		"_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".delCons"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"',mydata1) ;",!
	Write "		",!
	Write "		location.reload(true);",!
	Write "	}",!
	Write !,"	function close_page(){",!
	Write "		self.document.location.replace = ""BEDDEDIT1.csp?OBJID="_(%session.Data("OBJECTID"))_"&DFN="_(%session.Data("DFN"))_""" ;",!
	Write !,"	}",!
	Write "		",!
	Write "	function setConsS() {",!
	Write "		var x0 = document.getElementById(""conss"");	/// cspbind ",!
	Write "		var x1 = document.form.consrv.value ;		/// value of cspbind",!
	Write "			for (i=0; i<x0.options.length; i++){",!
	Write "				if (x0.options[i].value == x1) {",!
	Write "					x0.selectedIndex = i ;",!
	Write "					}",!
	Write "				}",!
	Write "		}",!
	Write "	",!
	Write "	function setCons() {",!
	Write "		var x0 = document.getElementById(""consult"");",!
	Write "		var x1 = document.form.constf.value ;",!
	Write "			for (i=0; i<x0.options.length; i++){",!
	Write "				if (x0.options[i].value == x1) {",!
	Write "					x0.selectedIndex = i ;",!
	Write "					}",!
	Write "				}",!
	Write "		}",!
	Write "	",!
	Write "	function setFocus() {",!
	Write "	",!
	Write "		//Make sure user is logged in",!
	Write !,"		//Get user",!
	Write "		var user = "_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".ReturnDUZ"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"') ;",!
	Write "	",!
	Write "		if (user == 0) {",!
	Write "			location.replace='BEDDLogin.csp';",!
	Write "			return true;",!
	Write "		}",!
	Write !,"		setConsS();",!
	Write "		setCons();",!
	Write "	}",!
	Write "	",!
	Write "	function doDateCheck(myElement)	{",!
	Write "		var my_info = document.getElementById(myElement);",!
	Write "		var my_datetm = "_("cspHttpServerMethod")_"('"_(..Encrypt($listbuild($classname()_".MyXdate"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""))_"',my_info.value) ;",!
	Write "		if (my_datetm == -1) {",!
	Write "			//We got an error from the function leave the cursor on this element",!
	Write "			my_info.value="""";",!
	Write "			my_info.focus();",!
	Write "		} else {",!
	Write "			my_info.value=my_datetm;",!
	Write "		}",!
	Write "	}",!
	Write "		",!
	Write "</SCRIPT>"
	Do ..formGenJS()
	Write !,(..HyperEventHead(0,0))
	Write !,!,"</HEAD>"
]]></Implementation>
</Method>

<Method name="OnPageHTML">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<HTML>"
	Write !
	Do ..OnPageHEAD()
	Write !
	Do ..OnPageBODY()
	Write !,"</HTML>"
]]></Implementation>
</Method>

<Method name="OnPagePOSTHTML">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Set objForm=$$$NULLOREF
	Set vstForm=$$$NULLOREF
	Set VuCons=$$$NULLOREF
]]></Implementation>
</Method>

<Method name="OnPagePREHTML">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Set objForm=$$$NULLOREF
	Set vstForm=$$$NULLOREF
	Set VuCons=$$$NULLOREF
]]></Implementation>
</Method>

<Method name="ReturnDUZ">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Language>cache</Language>
<Implementation><![CDATA[
 	Set user=$Get(%session.Data("DUZ"))
 	If (user<1) {
 		Set user=0
 	}
 
 	Quit user
 
 
]]></Implementation>
</Method>

<Method name="delCons">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>objid:%String</FormalSpec>
<Language>cache</Language>
<Implementation><![CDATA[
 	Quit:objid=""
 
 	//Audit the activity
 	Do LOG^BEDDUTIU(%session.Data("DUZ"),"P","D","BEDDCONS.csp","BEDD: User deleted patient consult information",$G(%session.Data("DFN")))
 
 	Set dstatus=##class(BEDD.EDConsults).%DeleteId(objid)
 	If ( $$$ISERR(dstatus) ) {
 		Do $System.Status.DisplayError(dstatus)
 		&js<alert('Error deleting Consult: objid = |' + #(..QuoteJS(objid))# ) +'|';>
 	}
 	else {
 		&js<alert('Consult deleted');>
 	}
 	Quit
 
]]></Implementation>
</Method>

<Method name="editCons">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>dxID:%String</FormalSpec>
<Language>cache</Language>
<Implementation><![CDATA[
 	Set myobj=##class(BEDD.EDConsults).%OpenId(dxID)
 	Set mydtNot=$TR($$HTE^XLFDT(myobj.DateNotify_","_myobj.TimeNotify,"5T"),"@"," ")
 	If mydtNot="," {
 		Set mydtNot=""
 	}
 	Set mydtSee=$TR($$HTE^XLFDT(myobj.DateSeen_","_myobj.TimeSeen,"5T"),"@"," ")
 	If mydtSee="," {
 		Set mydtSee=""
 	}
 		Set CNsize=myobj.CNotes.SizeGet() Set CNinfo=myobj.CNotes.Read(CNsize)
 	&js< 
 		CSPPage.document.form.consrv.value = #(..QuoteJS(myobj.ConsultSrv))# ;
 		CSPPage.document.form.constf.value = #(..QuoteJS(myobj.Consult))# ;
 		CSPPage.document.form.DtTmNot.value = #(..QuoteJS(mydtNot))# ;
 		CSPPage.document.form.DtTmSee.value = #(..QuoteJS(mydtSee))# ;
 		CSPPage.document.form.ConNote.value = #(..QuoteJS(CNinfo))# ;
 		setConsS();
 		setCons();	
 	>
 	Set myobj=""
 	Quit
 
]]></Implementation>
</Method>

<Method name="formGenJS">
<Description><![CDATA[
Called to render JavaScript code that is required for form <var>form</var>.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<Language>cache</Language>
<ReturnType/>
<Implementation><![CDATA[
	Write !,"<script language=""JavaScript"" type=""text/javascript"">",!
	Write "<!--",!
	Write "function form_new()",!
	Write "{",!
	Write "   // invoke #server(csp.beddcons.formLoad())",!
	Write "   return ("_"cspHttpServerMethod"_"('",..Encrypt($listbuild("csp.beddcons.formLoad"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""),"','') == 1);",!
	Write "}",!
	Write "function form_save()",!
	Write "{",!
	Write "   var form = self.document.form;",!
	Write "   var objid = form.OBJID.value;",!
	Write "   var result = 0;",!
	Write "   if (form_validate()) {",!
	Do ..formSavJS()
	Write "   }",!
	Write "   return (result == 1);",!
	Write "}",!
	Write "function form_validate()",!
	Write "{",!
	Write "   var errorMsg = '';",!
	Write "   var missingMsg = '';",!
	Write "   var invalidMsg = '';",!
	Write "   var missingArray = new Array();",!
	Write "   var invalidArray = new Array();",!
	Write "   var valid;",!
	Write "   missingMsg = form_testRequired(missingArray);",!
	Write "   invalidMsg = form_testValid(invalidArray);",!
	Write "   if ((missingMsg == '') && (invalidMsg == '')) {",!
	Write "      return true;",!
	Write "   }",!
	Write "   errorMsg   = "_..QuoteJS(%response.GetText("","%CSPBind","SaveErrorLine","_______________________________________________________________"))_"+'\n\n';",!
	Write "   errorMsg  += "_..QuoteJS(%response.GetText("","%CSPBind","SaveError","The form was not saved because of the following error(s)."))_"+'\n';",!
	Write "   errorMsg  += "_..QuoteJS(%response.GetText("","%CSPBind","SaveCorrect","Please correct these error(s) and try again."))_"+'\n';",!
	Write "   errorMsg  += "_..QuoteJS(%response.GetText("","%CSPBind","SaveErrorLine","_______________________________________________________________"))_"+'\n\n';",!
	Write "   if (missingMsg!= '') {",!
	Write "      errorMsg += "_..QuoteJS(%response.GetText("","%CSPBind","SaveRequiredError","The following required field(s) are empty: "))_" + missingMsg + '\n';",!
	Write "   }",!
	Write "   if (invalidMsg != '') {",!
	Write "      errorMsg += "_..QuoteJS(%response.GetText("","%CSPBind","SaveInvalidError","The following field(s) contain invalid values: "))_" + invalidMsg + '\n';",!
	Write "   }",!
	Write "   alert(errorMsg);",!
	Write "   return false;",!
	Write "}",!
	Write "function form_testRequired(missingArray)",!
	Write "{",!
	Write "   var missingMsg = '';",!
	Do ..formReqJS()
	Write "   return missingMsg;",!
	Write "}",!
	Write "function form_testValid(invalidArray)",!
	Write "{",!
	Write "   var valid;",!
	Write "   var invalidMsg = '';",!
	Do ..formValJS()
	Write "   return invalidMsg;",!
	Write "}",!
	Write "// -->",!
	Write "</script>",!
	Quit
]]></Implementation>
</Method>

<Method name="formLoad">
<Description><![CDATA[
Updates the form <var>form</var> from the specified object instance by sending JavaScript to the client.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>objid:%String,obj:%Integer=""</FormalSpec>
<Language>cache</Language>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	If '..formLoadJS(.objid,obj) {
		Write "CSPPage.alert("_..QuoteJS("formLoad: "_%response.GetText("","%CSPBind","OpenObjectError","Unable to open object."))_");",!
		Do ..formLoadJS(objid,obj,1)
	}
	Quit 1
]]></Implementation>
</Method>

<Method name="formLoadJS">
<Description><![CDATA[
Updates the form <var>form</var> from the specified object instance by sending JavaScript to the client.  Error reporting is left to the caller.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>objid:%String,obj:%Integer="",alwaysLoad:%Boolean=0</FormalSpec>
<Language>cache</Language>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	New close,ok
	Set close=0,ok=1
	If (obj'=$$$NULLOREF) {
		Set objid = obj.%Id()
	} Else {
		If (objid'="") {
			Set obj = ##class(BEDD.EDConsults).%OpenId(objid)
		} Else {
			Set obj = ##class(BEDD.EDConsults).%New()
		}
		If (obj=$$$NULLOREF) {
			If 'alwaysLoad Quit 0
			Set ok=0
		} Else {
			Set close=1
		}
	}
	Write "var form = CSPPage.document.form;",!
	Write "if (form.text3 != null && form.text3 != null) { form.text3.value = ",..QuoteJS($select(obj="":"",1:(obj.%Id()))),";}",!
	Write "if (form.DFN != null && form.DFN != null) { form.DFN.value = ",..QuoteJS($select(obj="":"",1:($select(obj.DFN=$c(0):"",1:(obj.DFNLogicalToDisplay(obj.DFN)))))),";}",!
	Write "if (form.EDVISITID != null && form.EDVISITID != null) { form.EDVISITID.value = ",..QuoteJS($select(obj="":"",1:($select(obj.EDVISITID=$c(0):"",1:(obj.EDVISITIDLogicalToDisplay(obj.EDVISITID)))))),";}",!
	Write "if (form.conss != null && form.conss != null) { CSPPage.cspSetSelectValue(form.conss, ",..QuoteJS($select(obj="":"",1:($select(obj.ConsultSrv=$c(0):"",1:(obj.ConsultSrvLogicalToDisplay(obj.ConsultSrv)))))),");}",!
	Write "if (form.consult != null && form.consult != null) { CSPPage.cspSetSelectValue(form.consult, ",..QuoteJS($select(obj="":"",1:($select(obj.Consult=$c(0):"",1:(obj.ConsultLogicalToDisplay(obj.Consult)))))),");}",!
	Write "if (form.CNotes != null && form.CNotes != null) { form.CNotes.value = ",..QuoteJS($select(obj="":"",1:(##class(%CSP.DwxUtils).EscapeStream(obj.CNotes,"JS")))),";}",!
	Write "if (form.OBJID != null) { form.OBJID.value = ",..QuoteJS(objid),";}",!
	If close=1 Set obj=""
	Quit ok
]]></Implementation>
</Method>

<Method name="formReqJS">
<Description><![CDATA[
Called during rendering of this page to write out JavaScript code to do required field tests for form <var>form</var>.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<Language>cache</Language>
<ReturnType/>
<Implementation><![CDATA[
	Write "   if (cspIsFieldEmpty('form','EDVISITID')) {",!
	Write "      missingMsg = missingMsg + '\n     EDVISITID';",!
	Write "      if (missingArray != null) { missingArray[missingArray.length] = 'EDVISITID'; }",!
	Write "   }",!
	Write "   if (cspIsFieldEmpty('form','conss')) {",!
	Write "      missingMsg = missingMsg + '\n     conss';",!
	Write "      if (missingArray != null) { missingArray[missingArray.length] = 'conss'; }",!
	Write "   }",!
	Quit
]]></Implementation>
</Method>

<Method name="formSavJS">
<Description><![CDATA[
Called during rendering of this page to write out JavaScript code to invoke the server-side save method for form <var>form</var>.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<Language>cache</Language>
<ReturnType/>
<Implementation><![CDATA[
	Write "      //invoke #server(csp.beddcons.formSave())"
	Write !,"      result = "_"cspHttpServerMethod"_"('",..Encrypt($listbuild("csp.beddcons.formSave"))_$select(%session.UseSessionCookie'=2:"&CSPCHD="_%session.CSPSessionCookie,1:""),"',1,'',objid"
	Write ",",!,"         (form.DFN == null || form.DFN == null) ? null : cspTrim(form.DFN.value)" ;%in1
	Write ",",!,"         (form.EDVISITID == null || form.EDVISITID == null) ? null : cspTrim(form.EDVISITID.value)" ;%in2
	Write ",",!,"         cspGetSelectValue(form.conss)" ;%in3
	Write ",",!,"         cspGetSelectValue(form.consult)" ;%in4
	Write ",",!,"         (form.CNotes == null || form.CNotes == null) ? null : cspNormalizeString(form.CNotes.value)" ;%in5
	Write ");",!
	Quit
]]></Implementation>
</Method>

<Method name="formSave">
<Description><![CDATA[
Saves the data sent from the form <var>form</var> into the specified object instance. If successful, updates the values on the form.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[respond:%Boolean=0,&errmsg:%String="",objid:%String="",%in1:%Library.String,%in2:%Library.String,%in3:%Library.String,%in4:%Library.String,%in5:%Library.GlobalCharacterStream]]></FormalSpec>
<Language>cache</Language>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	New obj,sc,value,in,error,sverror,err,i,ok
	Set sc=$$$OK
	Set ok=1
	Set error=""
	Set sverror=""
	If (objid="") {
		Set obj = ##class(BEDD.EDConsults).%New()
	} ElseIf '$isobject(objid) {
		Set obj = ##class(BEDD.EDConsults).%OpenId(objid)
	} Else {
		Set obj = objid
	}
	If (obj=$$$NULLOREF) {
		If (respond) {
			Write "CSPPage.alert("_..QuoteJS(%response.GetText("","%CSPBind","SaveObjectError","Unable to open object for saving"))_");",!
		} Else {
			Set errmsg = %response.GetText("","%CSPBind","SaveObjectError","Unable to open object for saving")
		}
		Quit 0
	}
	Try {
 ; DFN 
 If $data(%in1) {
   Set value=$select(%in1="":"",1:##class(BEDD.EDConsults).DFNDisplayToLogical(%in1))
   If (%in1'=""),(value="") {
     Set error=error_%response.GetText("","%CSPBind","InvalidValue","%1 has an invalid value.","DFN")_"\n"
   } Else {
     Set obj.DFN=value
   }
 }
 ; EDVISITID 
 If $data(%in2) {
   Set value=$select(%in2="":"",1:##class(BEDD.EDConsults).EDVISITIDDisplayToLogical(%in2))
   If (%in2'=""),(value="") {
     Set error=error_%response.GetText("","%CSPBind","InvalidValue","%1 has an invalid value.","EDVISITID")_"\n"
   } Else {
     Set obj.EDVISITID=value
   }
 }
 ; ConsultSrv 
 If $data(%in3) {
   Set value=$select(%in3="":"",1:##class(BEDD.EDConsults).ConsultSrvDisplayToLogical(%in3))
   If (%in3'=""),(value="") {
     Set error=error_%response.GetText("","%CSPBind","InvalidValue","%1 has an invalid value.","conss")_"\n"
   } Else {
     Set obj.ConsultSrv=value
   }
 }
 ; Consult 
 If $data(%in4) {
   Set value=$select(%in4="":"",1:##class(BEDD.EDConsults).ConsultDisplayToLogical(%in4))
   If (%in4'=""),(value="") {
     Set error=error_%response.GetText("","%CSPBind","InvalidValue","%1 has an invalid value.","consult")_"\n"
   } Else {
     Set obj.Consult=value
   }
 }
 ; CNotes 
 If $data(%in5) {
   Do obj.CNotes.Rewind()
   If $isobject(%in5) {
     Do %in5.Rewind()
     While '%in5.AtEnd {
       Do obj.CNotes.Write(%in5.Read(16000))
     }
   } Else {
     Do obj.CNotes.Write(%in5)
   }
 }
	Set:error'="" ok=0
	Set:error="" sc=obj.%Save()
	} Catch ex {
		Set ok=0
		If ($classname(ex)'="%Exception.SystemException") || (ex.Name'="<MAXSTRING>") || (error="") {
			Set sc=ex.AsStatus(),error=""
		}
	}
	If $$$ISERR(sc) {
		Set ok=0
		Do DecomposeStatus^%apiOBJ(sc,.err,"",%response.MatchLanguage())
		For i=1:1:err {
			If (respond) {
				Set sverror=sverror_" + "_..QuoteJS(err(i))_" + '\n'"
			} Else {
				Set sverror=sverror_..EscapeHTML(err(i))_"\n"
			}
		}
	}
	If (respond) {
		If (ok) {
			Do ..formLoad("",obj)
		} Else {
			Write "CSPPage.alert(",!
			Write ..QuoteJS(%response.GetText("","%CSPBind","SaveErrorLine","_______________________________________________________________"))_"+'\n\n'+",!
			Write ..QuoteJS(%response.GetText("","%CSPBind","SaveError","The form was not saved because of the following error(s)."))_"+'\n'+",!
			Write ..QuoteJS(%response.GetText("","%CSPBind","SaveCorrect","Please correct these error(s) and try again."))_"+'\n'+",!
			Write ..QuoteJS(%response.GetText("","%CSPBind","SaveErrorLine","_______________________________________________________________"))_"+'\n\n'+",!
			Write "'",error,"'",sverror,");",!
		}
	} Else {
		Set errmsg=..EscapeHTML(error)_sverror
	}
	Quit ok
]]></Implementation>
</Method>

<Method name="formSubmit">
<Description><![CDATA[
Translates a submit request from form <var>form</var> into a call to <METHOD>formSave</METHOD>.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&errmsg:%String="",objid]]></FormalSpec>
<Language>cache</Language>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
 New v
 Set v("DFN")=$ZSTRIP($get(%request.Data("DFN",1)),">W")
 Set v("EDVISITID")=$ZSTRIP($get(%request.Data("EDVISITID",1)),">W")
 Set v("ConsultSrv")=$get(%request.Data("conss",1))
 Set v("Consult")=$get(%request.Data("consult",1))
 Set v("CNotes")=$get(%request.Data("CNotes",1))
	If $get(objid)="" Set objid=$get(%request.Data("OBJID",1))
	Quit ..formSave(0,.errmsg,objid,v("DFN"),v("EDVISITID"),v("ConsultSrv"),v("Consult"),v("CNotes"))
]]></Implementation>
</Method>

<Method name="formValJS">
<Description><![CDATA[
Called during rendering of this page to write out JavaScript code to do field validation tests for form <var>form</var>.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<Language>cache</Language>
<ReturnType/>
<Implementation><![CDATA[	Quit
]]></Implementation>
</Method>

<Method name="getDtChk">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>date:%String,admdt:%String,chk:%String</FormalSpec>
<Language>cache</Language>
<Implementation><![CDATA[
 Quit $$DTCHK^BEDDUTIU(date,admdt,chk)
 
]]></Implementation>
</Method>

<Method name="updateCons">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>objid:%String,myService:%String,myProvider:%String,myDtTmNot:%String,myDtTmSee:%String,myvisitid:%String,myptdfn:%String,mynote:%String</FormalSpec>
<Language>cache</Language>
<Implementation><![CDATA[
 
 	//Audit the activity
 	Do LOG^BEDDUTIU(%session.Data("DUZ"),"P","E","BEDDCONS.csp","BEDD: User edited patient consult information",$G(%session.Data("DFN")))
 	
 	Set newobj="",message=""
 	If (objid]"") {
 		//Update this object
 		Set newobj=##class(BEDD.EDConsults).%OpenId(objid)
 		Set message="Consult has been updated"
 	}
 	else { // New object to add to Diagnosis list
 		Set newobj=##class(BEDD.EDConsults).%New()
 		Set message="Consult has been added"
 	} 
 	// Get Date & Time in $H format for saving
 	Set myHnot=$$TODLH^BEDDUTIL($P(myDtTmNot," ",1)_"@"_$P(myDtTmNot," ",2))
 	Set myHsee=$$TODLH^BEDDUTIL($P(myDtTmSee," ",1)_"@"_$P(myDtTmSee," ",2))
 	Set newobj.EDVISITID=myvisitid,newobj.DFN=myptdfn,newobj.Consult=myProvider
 	Set newobj.ConsultSrv=myService,newobj.EDVISITID=myvisitid
 	If (myHnot'=-1) {
 		Set newobj.DateNotify=$P(myHnot,",",1),newobj.TimeNotify=$P(myHnot,",",2)
 	}
 	Set newobj.DateSeen=$p(myHsee,",",1),newobj.TimeSeen=$p(myHsee,",",2)
 	//Update Notes if it is not empty
 	if mynote]"" {
 		Set CNsize=newobj.CNotes.SizeGet() Set CNinfo=newobj.CNotes.Read(CNsize)
 		If mynote'=CNinfo { //Something changed in the notes field
 			Do newobj.CNotes.Write(mynote)
 		}
 	}
 	Set MyStatus=newobj.%Save()
 	If ( $$$ISERR(MyStatus) ) {
 		Do $System.Status.DisplayError(MyStatus)
 		&js<alert('Error saving Consult information: ' + #(..QuoteJS(message))# );>
 	}
 	else {
 		&js<alert(#(..QuoteJS(message))#);>
 	}
 	Quit
 
]]></Implementation>
</Method>

<Parameter name="CSPFILE">
<Default>D:\intersystems\E3IHS\CSP\foia_goldb\BEDDCONS.csp</Default>
</Parameter>

<Parameter name="CSPURL">
<Default>/csp/foia_goldb/BEDDCONS.csp</Default>
</Parameter>

<Parameter name="FileTimestamp">
<Default>64671,78192</Default>
</Parameter>
</Class>
</Export>
